/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2024-06-10 22:45:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vistas;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class carrito_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1718059451246L));
    _jspx_dependants.put("jar:file:/C:/Users/Alumno/.ssh/Proyecto/sfrentas/build/web/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153406682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("      <link rel=\"icon\" type=\"image/x-icon\" href=\"PresentacionAcosoZero/Informate/favicon.ico.jpg\">\r\n");
      out.write("        <link href=\"css/OverallDesigns222.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("        <link href=\"css/DiesenoAgregar222.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("        <link href=\"css/OverallDesings_Menu_Buttons.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("        <title>Agregar</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\">\r\n");
      out.write("    <img src=\"AcosoZer0Batiz/Imagenes/logo.png\" alt=\"AcosoZer0Batiz\">\r\n");
      out.write("      </a>\r\n");
      out.write("      <div class=\"dropdown-container\">\r\n");
      out.write("         <ul class=\"navbars-nav btn-group my-2 my-lg-0\" role=\"group\">\r\n");
      out.write("            <a\r\n");
      out.write("               style=\"color: white; cursor: pointer\"\r\n");
      out.write("               class=\"dropdown-toggle\"\r\n");
      out.write("               data-toggle=\"dropdown\">\r\n");
      out.write("            <i class=\"fas fa-user-tie\"></i> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${logueo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("            </a>\r\n");
      out.write("            <div class=\"dropdown-menu text-center dropdown-menu-right\">\r\n");
      out.write("               <a class=\"dropdown-item\" href=\"#\"\r\n");
      out.write("                  ><img src=\"img/user.png\" alt=\"60\" height=\"60\"\r\n");
      out.write("                  /></a>\r\n");
      out.write("               <a class=\"dropdown-item\" href=\"#\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("               <a\r\n");
      out.write("                  class=\"dropdown-item\"\r\n");
      out.write("                  href=\"#\"\r\n");
      out.write("                  data-toggle=\"modal\"\r\n");
      out.write("                  data-target=\"#myModal\"\r\n");
      out.write("                  >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${correo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a\r\n");
      out.write("                  >\r\n");
      out.write("               <div class=\"dropdown-divider\"></div>\r\n");
      out.write("               <a\r\n");
      out.write("                  class=\"dropdown-item\"\r\n");
      out.write("                  href=\"Controlador?accion=MisCompras\"\r\n");
      out.write("                  >Mis Compras</a\r\n");
      out.write("                  >\r\n");
      out.write("               <div class=\"dropdown-divider\"></div>\r\n");
      out.write("               <a\r\n");
      out.write("                  class=\"dropdown-item\"\r\n");
      out.write("                  href=\"./Controlador?accion=Salir\">\r\n");
      out.write("               <i class=\"fas fa-arrow-right\"> Salir</i></a\r\n");
      out.write("                  >\r\n");
      out.write("            </div>\r\n");
      out.write("         </ul>\r\n");
      out.write("                  \r\n");
      out.write("      </div>\r\n");
      out.write("                  <div class=\"contenedormenupagina\">\r\n");
      out.write("                      \r\n");
      out.write("                      \r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <a href=\"./Controlador?accion=Nuevo\">\r\n");
      out.write("\r\n");
      out.write("    <main>\r\n");
      out.write("      <div class=\"items1\">\r\n");
      out.write("        <!-- Ruby loop converted to HTML -->\r\n");
      out.write("        <div class=\"item1\">\r\n");
      out.write("          <svg viewBox=\"0 0 300 200\" preserveAspectRatio=\"xMidYMid slice\">\r\n");
      out.write("            <defs>\r\n");
      out.write("              <clipPath id=\"clip-1\">\r\n");
      out.write("                <circle cx=\"0\" cy=\"0\" r=\"150px\" fill=\"#000\"></circle>\r\n");
      out.write("              </clipPath>\r\n");
      out.write("            </defs>\r\n");
      out.write("            <text class=\"svg-text\" x=\"50%\" y=\"50%\" dy=\".3em\">Inicio</text>\r\n");
      out.write("            <g clip-path=\"url(#clip-1)\">\r\n");
      out.write("              <image xlink:href=\"https://th.bing.com/th/id/OIP.PT4l4YI8K-zxwRwWVpqstQAAAA?rs=1&pid=ImgDetMain\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMinYMin slice\"></image>\r\n");
      out.write("              <text class=\"svg-masked-text\" x=\"50%\" y=\"50%\" dy=\".3em\">Inicio</text>\r\n");
      out.write("            </g>\r\n");
      out.write("          </svg>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Repeat for other items -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </main>\r\n");
      out.write("    <div class=\"options\">\r\n");
      out.write("      <button class=\"dark\"></button>\r\n");
      out.write("      <button class=\"light\"></button>\r\n");
      out.write("    </div>\r\n");
      out.write("  </a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <a href=\"./Controlador?accion=carrito\">\r\n");
      out.write("\r\n");
      out.write("    <main>\r\n");
      out.write("      <div class=\"items2\">\r\n");
      out.write("        <!-- Ruby loop converted to HTML -->\r\n");
      out.write("        <div class=\"item2\">\r\n");
      out.write("          <svg viewBox=\"0 0 300 200\" preserveAspectRatio=\"xMidYMid slice\">\r\n");
      out.write("            <defs>\r\n");
      out.write("              <clipPath id=\"clip-2\">\r\n");
      out.write("                <circle cx=\"0\" cy=\"0\" r=\"150px\" fill=\"#000\"></circle>\r\n");
      out.write("              </clipPath>\r\n");
      out.write("            </defs>\r\n");
      out.write("            <text class=\"svg-text\" x=\"50%\" y=\"50%\" dy=\".3em\">Informate</text>\r\n");
      out.write("            <g clip-path=\"url(#clip-2)\">\r\n");
      out.write("              <image xlink:href=\"https://store-images.s-microsoft.com/image/apps.50670.13727851868390641.c9cc5f66-aff8-406c-af6b-440838730be0.d205e025-5444-4eb1-ae46-571ae6895928?q=90&w=480&h=270\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMinYMin slice\"></image>\r\n");
      out.write("              <text class=\"svg-masked-text\" x=\"50%\" y=\"50%\" dy=\".3em\">Informate</text>\r\n");
      out.write("            </g>\r\n");
      out.write("          </svg>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Repeat for other items -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </main>\r\n");
      out.write("    <div class=\"options\">\r\n");
      out.write("      <button class=\"dark\"></button>\r\n");
      out.write("      <button class=\"light\"></button>\r\n");
      out.write("    </div>\r\n");
      out.write("  </a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("               \r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <a href=\"./ReporteServlet?action=list\">\r\n");
      out.write("\r\n");
      out.write("    <main>\r\n");
      out.write("      <div class=\"items3\">\r\n");
      out.write("        <!-- Ruby loop converted to HTML -->\r\n");
      out.write("        <div class=\"item3\">\r\n");
      out.write("          <svg viewBox=\"0 0 300 200\" preserveAspectRatio=\"xMidYMid slice\">\r\n");
      out.write("            <defs>\r\n");
      out.write("              <clipPath id=\"clip-3\">\r\n");
      out.write("                <circle cx=\"0\" cy=\"0\" r=\"150px\" fill=\"#000\"></circle>\r\n");
      out.write("              </clipPath>\r\n");
      out.write("            </defs>\r\n");
      out.write("            <text class=\"svg-text\" x=\"50%\" y=\"50%\" dy=\".3em\">AcosoZer0Batiz</text>\r\n");
      out.write("            <g clip-path=\"url(#clip-3)\">\r\n");
      out.write("              <image xlink:href=\"https://store-images.s-microsoft.com/image/apps.50670.13727851868390641.c9cc5f66-aff8-406c-af6b-440838730be0.d205e025-5444-4eb1-ae46-571ae6895928?q=90&w=480&h=270\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMinYMin slice\"></image>\r\n");
      out.write("              <text class=\"svg-masked-text\" x=\"50%\" y=\"50%\" dy=\".3em\">AcosoZer0Batiz</text>\r\n");
      out.write("            </g>\r\n");
      out.write("          </svg>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Repeat for other items -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </main>\r\n");
      out.write("    <div class=\"options\">\r\n");
      out.write("      <button class=\"dark\"></button>\r\n");
      out.write("      <button class=\"light\"></button>\r\n");
      out.write("    </div>\r\n");
      out.write("  </a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                      \r\n");
      out.write("                  </div>\r\n");
      out.write("      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("      \r\n");
      out.write("         <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n");
      out.write("            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("         </div>\r\n");
      out.write("      </nav>\r\n");
      out.write("        <div class=\"container1 mt-5\">\r\n");
      out.write("            <div class=\"d-flex\">\r\n");
      out.write("                                            \r\n");
      out.write("            </div>                    \r\n");
      out.write("            <div class=\"row\">             \r\n");
      out.write("                <div class=\"col-lg-9\">                 \r\n");
      out.write("                    <table class=\"table\">\r\n");
      out.write("                        <thead class=\"thead-light\">\r\n");
      out.write("                            <tr class=\"text-center\">\r\n");
      out.write("                                <th>Item</th>                               \r\n");
      out.write("                                <th>Articulo</th>\r\n");
      out.write("                                <th>Descripcion</th>\r\n");
      out.write("                                <th>Precio</th>\r\n");
      out.write("                                <th>Cantidad</th>                       \r\n");
      out.write("                                <th>Total</th>                       \r\n");
      out.write("                                <th>Acciones</th>                       \r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>                    \r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-lg-3\">                  \r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"card-header\">\r\n");
      out.write("                            Generar Compra\r\n");
      out.write("                        </div>\r\n");
      out.write("                   \r\n");
      out.write("                        <div class=\"card-footer\">\r\n");
      out.write("                            <a href=\"Controlador?accion=GenerarCompra\" class=\"btn btn-danger btn-block\">Numero total de reporte</a>\r\n");
      out.write("                            <a href=\"#\" data-toggle=\"modal\" data-target=\"#myModalPago\" class=\"btn btn-info btn-block\">Enviar Reportes a Red De Genero</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>          \r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Modal Iniciar Session o Registrarse -->\r\n");
      out.write("        <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("          \r\n");
      out.write("         <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n");
      out.write("            <div class=\"container col-lg-9\">\r\n");
      out.write("               <div class=\"modal-content\">\r\n");
      out.write("                   <div class=\"modalimage\">\r\n");
      out.write("                         <div class=\"recuadro\">\r\n");
      out.write("                         <img id=\"modalimage\" src=\"SOFTUX/IMAGENES/HALO2.jpg\" class=\"rounded-image\"> </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"pr-2 pt-1\">\r\n");
      out.write("                     <button\r\n");
      out.write("                        type=\"button\"\r\n");
      out.write("                        class=\"close\"\r\n");
      out.write("                        data-dismiss=\"modal\">\r\n");
      out.write("                     <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                     </button>\r\n");
      out.write("          </div>\r\n");
      out.write("                      \r\n");
      out.write("                  <div class=\"text-center\">\r\n");
      out.write("                     <img src=\"img/user.png\" width=\"100\" height=\"100\" />\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"modal-header text-center\">\r\n");
      out.write("                     <ul class=\"nav nav-pills\">\r\n");
      out.write("                        <li class=\"ButtonFormSession\">\r\n");
      out.write("                           <button id=\"InicioSesionForm\">Iniciar Sesisón</button>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"ButtonFormSession\">\r\n");
      out.write("                           <button id=\"RegistroForm\">Registro</button>\r\n");
      out.write("                        </li>\r\n");
      out.write("                     </ul>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"modal-body\">\r\n");
      out.write("                     <div class=\"tab-content\" id=\"pills-tabContent\">\r\n");
      out.write("                        <!-- Iniciar Session -->\r\n");
      out.write("                        <div\r\n");
      out.write("                           class=\"tab-pane fade show active\"\r\n");
      out.write("                           id=\"pills-iniciar\"\r\n");
      out.write("                           role=\"tabpanel\">\r\n");
      out.write("                           <form action=\"Controlador\">\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Email address</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"email\"\r\n");
      out.write("                                    name=\"txtemail\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"email@example.com\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Password</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"password\"\r\n");
      out.write("                                    name=\"txtpass\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"Password\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"ola\"><button\r\n");
      out.write("                                 type=\"submit\"\r\n");
      out.write("                                 name=\"accion\"\r\n");
      out.write("                                 value=\"Validar\"\r\n");
      out.write("                                 class=\"btn btn-outline-danger btn-block\">\r\n");
      out.write("                              Iniciar\r\n");
      out.write("                              </button></div>\r\n");
      out.write("                           </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <!-- Registrarse -->\r\n");
      out.write("                        <div\r\n");
      out.write("                           class=\"tab-pane fade\"\r\n");
      out.write("                           id=\"pills-registrar\"\r\n");
      out.write("                           role=\"tabpanel\">\r\n");
      out.write("                           <form action=\"Controlador\">\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Nombres</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"text\"\r\n");
      out.write("                                    name=\"txtnom\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"Nombre Apellido Paterno Apellido Materno\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Boleta</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"text\"\r\n");
      out.write("                                    maxlength=\"10\"\r\n");
      out.write("                                    name=\"txtboleta\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"2023090001\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Grupo</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"text\"\r\n");
      out.write("                                    name=\"txtdire\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"4IV9\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Correo Electrónico</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"email\"\r\n");
      out.write("                                    name=\"txtemail\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"correoejemplo@gmail.com\" />\r\n");
      out.write("                              </div>\r\n");
      out.write("                              <div class=\"form-group\">\r\n");
      out.write("                                 <label>Contraseña</label>\r\n");
      out.write("                                 <input\r\n");
      out.write("                                    type=\"password\"\r\n");
      out.write("                                    name=\"txtpass\"\r\n");
      out.write("                                    class=\"form-control\"\r\n");
      out.write("                                    placeholder=\"n0m3l0\" />\r\n");
      out.write("                              </div><div class=\"ola\">\r\n");
      out.write("                              <button\r\n");
      out.write("                                 type=\"submit\"\r\n");
      out.write("                                 name=\"accion\"\r\n");
      out.write("                                 value=\"Registrar\"\r\n");
      out.write("                                 class=\"btn btn-outline-danger btn-block\">\r\n");
      out.write("                              Crear Cuenta\r\n");
      out.write("                              </button></div>\r\n");
      out.write("                           </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("        <!-- Modal de Pago -->\r\n");
      out.write("                    <div class=\"modal-header text-center\"> \r\n");
      out.write("                        <label><i class=\"fa-dollar-sign\"></i>Realizar Pago</label>\r\n");
      out.write("                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("                            <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                        </button>  \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-body\"> \r\n");
      out.write("                        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n");
      out.write("                            <!-- Metodo Pago -->\r\n");
      out.write("                            <div class=\"tab-pane fade show active\" id=\"pills-iniciar\" role=\"tabpanel\">\r\n");
      out.write("                                <form action=\"Controlador\">\r\n");
      out.write("                                    <div class=\"form-group\">\r\n");
      out.write("                                        <label>Card address</label>\r\n");
      out.write("                                        <input type=\"text\" class=\"form-control\" placeholder=\"9999-9999-9999-9999\">\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-group\">\r\n");
      out.write("                                        <label>Codigo Seguridad</label>\r\n");
      out.write("                                        <input type=\"text\" class=\"form-control\" placeholder=\"xxxx\">\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"form-group\">\r\n");
      out.write("                                        <label>Monto</label>\r\n");
      out.write("                                        <input type=\"text\" name=\"txtmonto\" value=\"$.");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalPagar}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("0\" class=\"form-control h1\">\r\n");
      out.write("                                    </div>                                   \r\n");
      out.write("                                    <button type=\"submit\" name=\"accion\" value=\"RealizarPago\" class=\"btn btn-info btn-block\">Pagar</button>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                        </div> \r\n");
      out.write("                    </div>\r\n");
      out.write("                                    \r\n");
      out.write("                                    <script>                        \r\n");
      out.write("    /*\r\n");
      out.write(" * Noel Delgado | @pixelia_me\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("var items1 = [];\r\n");
      out.write("\r\n");
      out.write("function getCoordinates(e, svg) {\r\n");
      out.write("  var point = svg.createSVGPoint();\r\n");
      out.write("  point.x = e.clientX;\r\n");
      out.write("  point.y = e.clientY;\r\n");
      out.write("  return point.matrixTransform(svg.getScreenCTM().inverse());\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function changeColor(e) {\r\n");
      out.write("  document.body.className = e.currentTarget.className;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function Item(config) {\r\n");
      out.write("  Object.keys(config).forEach(function (item1) {\r\n");
      out.write("    this[item1] = config[item1];\r\n");
      out.write("  }, this);\r\n");
      out.write("  this.el.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n");
      out.write("  this.el.addEventListener('touchmove', this.touchMoveHandler.bind(this));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("Item.prototype = {\r\n");
      out.write("  update: function update(c) {\r\n");
      out.write("    this.clip.setAttribute('cx', c.x);\r\n");
      out.write("    this.clip.setAttribute('cy', c.y);\r\n");
      out.write("  },\r\n");
      out.write("  mouseMoveHandler: function mouseMoveHandler(e) {\r\n");
      out.write("    this.update(getCoordinates(e, this.svg));\r\n");
      out.write("  },\r\n");
      out.write("  touchMoveHandler: function touchMoveHandler(e) {\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("    var touch = e.targetTouches[0];\r\n");
      out.write("    if (touch) return this.update(getCoordinates(touch, this.svg));\r\n");
      out.write("  }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("  var item1Elements = document.querySelectorAll('.item1');\r\n");
      out.write("  [].slice.call(item1Elements, 0).forEach(function (item1, index) {\r\n");
      out.write("    items1.push(new Item({\r\n");
      out.write("      el: item1,\r\n");
      out.write("      svg: item1.querySelector('svg'),\r\n");
      out.write("      clip: document.querySelector('#clip-1' + ' circle'),\r\n");
      out.write("    }));\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  var buttons = document.querySelectorAll('button');\r\n");
      out.write("  [].slice.call(buttons, 0).forEach(function (button) {\r\n");
      out.write("    button.addEventListener('click', changeColor);\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var items2 = [];\r\n");
      out.write("\r\n");
      out.write("function getCoordinates(e, svg) {\r\n");
      out.write("  var point = svg.createSVGPoint();\r\n");
      out.write("  point.x = e.clientX;\r\n");
      out.write("  point.y = e.clientY;\r\n");
      out.write("  return point.matrixTransform(svg.getScreenCTM().inverse());\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function changeColor(e) {\r\n");
      out.write("  document.body.className = e.currentTarget.className;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function Item(config) {\r\n");
      out.write("  Object.keys(config).forEach(function (item2) {\r\n");
      out.write("    this[item2] = config[item2];\r\n");
      out.write("  }, this);\r\n");
      out.write("  this.el.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n");
      out.write("  this.el.addEventListener('touchmove', this.touchMoveHandler.bind(this));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("Item.prototype = {\r\n");
      out.write("  update: function update(c) {\r\n");
      out.write("    this.clip.setAttribute('cx', c.x);\r\n");
      out.write("    this.clip.setAttribute('cy', c.y);\r\n");
      out.write("  },\r\n");
      out.write("  mouseMoveHandler: function mouseMoveHandler(e) {\r\n");
      out.write("    this.update(getCoordinates(e, this.svg));\r\n");
      out.write("  },\r\n");
      out.write("  touchMoveHandler: function touchMoveHandler(e) {\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("    var touch = e.targetTouches[0];\r\n");
      out.write("    if (touch) return this.update(getCoordinates(touch, this.svg));\r\n");
      out.write("  }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("  var item2Elements = document.querySelectorAll('.item2');\r\n");
      out.write("  [].slice.call(item2Elements, 0).forEach(function (item2, index) {\r\n");
      out.write("    items2.push(new Item({\r\n");
      out.write("      el: item2,\r\n");
      out.write("      svg: item2.querySelector('svg'),\r\n");
      out.write("      clip: document.querySelector('#clip-2' + ' circle'),\r\n");
      out.write("    }));\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  var buttons = document.querySelectorAll('button');\r\n");
      out.write("  [].slice.call(buttons, 0).forEach(function (button) {\r\n");
      out.write("    button.addEventListener('click', changeColor);\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var items3 = [];\r\n");
      out.write("\r\n");
      out.write("function getCoordinates(e, svg) {\r\n");
      out.write("  var point = svg.createSVGPoint();\r\n");
      out.write("  point.x = e.clientX;\r\n");
      out.write("  point.y = e.clientY;\r\n");
      out.write("  return point.matrixTransform(svg.getScreenCTM().inverse());\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function changeColor(e) {\r\n");
      out.write("  document.body.className = e.currentTarget.className;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function Item(config) {\r\n");
      out.write("  Object.keys(config).forEach(function (item3) {\r\n");
      out.write("    this[item3] = config[item3];\r\n");
      out.write("  }, this);\r\n");
      out.write("  this.el.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n");
      out.write("  this.el.addEventListener('touchmove', this.touchMoveHandler.bind(this));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("Item.prototype = {\r\n");
      out.write("  update: function update(c) {\r\n");
      out.write("    this.clip.setAttribute('cx', c.x);\r\n");
      out.write("    this.clip.setAttribute('cy', c.y);\r\n");
      out.write("  },\r\n");
      out.write("  mouseMoveHandler: function mouseMoveHandler(e) {\r\n");
      out.write("    this.update(getCoordinates(e, this.svg));\r\n");
      out.write("  },\r\n");
      out.write("  touchMoveHandler: function touchMoveHandler(e) {\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("    var touch = e.targetTouches[0];\r\n");
      out.write("    if (touch) return this.update(getCoordinates(touch, this.svg));\r\n");
      out.write("  }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("  var item3Elements = document.querySelectorAll('.item3');\r\n");
      out.write("  [].slice.call(item3Elements, 0).forEach(function (item3, index) {\r\n");
      out.write("    items3.push(new Item({\r\n");
      out.write("      el: item3,\r\n");
      out.write("      svg: item3.querySelector('svg'),\r\n");
      out.write("      clip: document.querySelector('#clip-3'  + ' circle'),\r\n");
      out.write("    }));\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  var buttons = document.querySelectorAll('button');\r\n");
      out.write("  [].slice.call(buttons, 0).forEach(function (button) {\r\n");
      out.write("    button.addEventListener('click', changeColor);\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>        \r\n");
      out.write("         document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("             // Deshabilitar los formularios al cargar la página\r\n");
      out.write("             document.querySelector(\"#pills-iniciar form\").style.display = \"block\";\r\n");
      out.write("             document.querySelector(\"#pills-registrar form\").style.display = \"none\";\r\n");
      out.write("             \r\n");
      out.write("             const OpcionIniciarSesionForm = document.getElementById('InicioSesionForm');\r\n");
      out.write("             const OpcionRegistrarseForm = document.getElementById('RegistroForm');\r\n");
      out.write("             \r\n");
      out.write("         OpcionIniciarSesionForm.addEventListener('click', () => {\r\n");
      out.write("          document.querySelector(\"#pills-iniciar form\").style.display = \"block\";\r\n");
      out.write("             document.querySelector(\"#pills-registrar form\").style.display = \"none\";\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         OpcionRegistrarseForm.addEventListener('click', () => {\r\n");
      out.write("          document.querySelector(\"#pills-iniciar form\").style.display = \"none\";\r\n");
      out.write("             document.querySelector(\"#pills-registrar form\").style.display = \"block\";\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("      </script>\r\n");
      out.write("      <script>\r\n");
      out.write("         document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("             // Obtener el elemento modal\r\n");
      out.write("             var modal = document.getElementById('myModal');\r\n");
      out.write("         \r\n");
      out.write("             // Deshabilitar la visibilidad del modal al cargar la página\r\n");
      out.write("             modal.style.display = 'none';\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("             // Obtener el botón de cerrar del modal\r\n");
      out.write("             var closeButton = document.querySelector('.close[data-dismiss=\"modal\"]');\r\n");
      out.write("             \r\n");
      out.write("             // Obtener el elemento modal\r\n");
      out.write("             var modal = document.getElementById('myModal');\r\n");
      out.write("         \r\n");
      out.write("             // Agregar evento de click al botón de cerrar\r\n");
      out.write("             closeButton.addEventListener('click', function() {\r\n");
      out.write("                 // Ocultar el modal\r\n");
      out.write("                 modal.style.display = 'none';\r\n");
      out.write("             });\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("      </script>\r\n");
      out.write("      <script>\r\n");
      out.write("         // Captura el elemento que activa el mini menú\r\n");
      out.write("         var dropdownToggle = document.querySelector('.dropdown-toggle');\r\n");
      out.write("         \r\n");
      out.write("         // Captura el mini menú\r\n");
      out.write("         var dropdownMenu = document.querySelector('.dropdown-menu');\r\n");
      out.write("         \r\n");
      out.write("         // Variable para controlar el estado del mini menú\r\n");
      out.write("         var isDropdownVisible = false;\r\n");
      out.write("         \r\n");
      out.write("         // Función para mostrar el mini menú temporalmente al pasar el cursor\r\n");
      out.write("         function showDropdownMenuTemporarily() {\r\n");
      out.write("             dropdownMenu.style.display = 'block';\r\n");
      out.write("             setTimeout(function() {\r\n");
      out.write("                 if (!isDropdownVisible) {\r\n");
      out.write("                     dropdownMenu.style.display = 'none';\r\n");
      out.write("                 }\r\n");
      out.write("             }, 2000); // Duración en milisegundos antes de ocultar el mini menú\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         // Función para mostrar u ocultar el mini menú\r\n");
      out.write("         function toggleDropdownMenu() {\r\n");
      out.write("             isDropdownVisible = !isDropdownVisible;\r\n");
      out.write("             dropdownMenu.style.display = isDropdownVisible ? 'block' : 'none';\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para mostrar el mini menú temporalmente al pasar el cursor sobre el elemento\r\n");
      out.write("         dropdownToggle.addEventListener('mouseenter', function(event) {\r\n");
      out.write("             showDropdownMenuTemporarily();\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para mantener visible el mini menú al presionarlo\r\n");
      out.write("         dropdownToggle.addEventListener('click', function(event) {\r\n");
      out.write("             event.preventDefault(); // Evita que el enlace se ejecute\r\n");
      out.write("             toggleDropdownMenu();\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para ocultar el mini menú al hacer clic fuera del mini menú o del elemento que lo activa\r\n");
      out.write("         document.addEventListener('click', function(event) {\r\n");
      out.write("             var isClickInside = dropdownToggle.contains(event.target) || dropdownMenu.contains(event.target);\r\n");
      out.write("             if (!isClickInside && isDropdownVisible) {\r\n");
      out.write("                 toggleDropdownMenu();\r\n");
      out.write("             }\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("            \r\n");
      out.write("      </script>\r\n");
      out.write("      <script>\r\n");
      out.write("         // Captura el elemento que activa el modal\r\n");
      out.write("         var modalToggle = document.querySelector('[data-toggle=\"modal\"][data-target=\"#myModal\"]');\r\n");
      out.write("         \r\n");
      out.write("         // Captura el modal\r\n");
      out.write("         var modal = document.getElementById('myModal');\r\n");
      out.write("         \r\n");
      out.write("         // Variable para controlar el estado del modal\r\n");
      out.write("         var isModalVisible = false;\r\n");
      out.write("         // Función para mostrar u ocultar el modal\r\n");
      out.write("         function toggleModal() {\r\n");
      out.write("             isModalVisible = !isModalVisible;\r\n");
      out.write("             modal.style.display = isModalVisible ? 'block' : 'none';\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para mostrar el modal temporalmente al pasar el cursor sobre el elemento\r\n");
      out.write("         modalToggle.addEventListener('mouseenter', function(event) {\r\n");
      out.write("             showModalTemporarily();\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para mantener visible el modal al presionarlo\r\n");
      out.write("         modalToggle.addEventListener('click', function(event) {\r\n");
      out.write("             event.preventDefault(); // Evita que el enlace se ejecute\r\n");
      out.write("             toggleModal();\r\n");
      out.write("             isDropdownVisible = !isDropdownVisible;\r\n");
      out.write("             dropdownMenu.style.display = isDropdownVisible ? 'block' : 'none';\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         // Agrega un evento para ocultar el modal al hacer clic fuera del modal o del elemento que lo activa\r\n");
      out.write("         document.addEventListener('click', function(event) {\r\n");
      out.write("             var isClickInside = modalToggle.contains(event.target) || modal.contains(event.target);\r\n");
      out.write("             if (!isClickInside && isModalVisible) {\r\n");
      out.write("                 toggleModal();\r\n");
      out.write("             }\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("      </script>\r\n");
      out.write(" <script src=\"js/funciones.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /vistas/carrito.jsp(180,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("c");
      // /vistas/carrito.jsp(180,28) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/vistas/carrito.jsp(180,28) '${Carrito}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${Carrito}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(" \r\n");
            out.write("                                <tr class=\"text-center tr\">\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getItem()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>                                   \r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getNombres()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("                                        <img src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getImagen()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"130\" height=\"110\">\r\n");
            out.write("                                    </td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getDescripcion()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getPrecioCompra()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getTurno()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getLugar()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>        \r\n");
            out.write("                                        <input type=\"hidden\" id=\"item1\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getIdReporte()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                                        <input type=\"number\" min=\"1\" max=\"10\"  id=\"Cant\" class=\" form-control text-center\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getCantidad()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                                    </td>   \r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getSubTotal()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>                           \r\n");
            out.write("                                    <td class=\"text-center\">                                         \r\n");
            out.write("                                        <input type=\"hidden\" id=\"item2\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.getIdReporte()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                                        <a id=\"deleteItem\" href=\"#\" class=\"btn\"><i class=\"fas fa-trash-alt\"></i></a>                                            \r\n");
            out.write("                                    </td>                           \r\n");
            out.write("                                </tr>\r\n");
            out.write("                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
